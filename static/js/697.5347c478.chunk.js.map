{"version":3,"file":"static/js/697.5347c478.chunk.js","mappings":"oKACA,EAA8B,+BAA9B,EAA4E,gCAA5E,EAAoH,yB,SC2CpH,EAnC4C,SAAH,GAAiC,IAA3BA,EAAM,EAANA,OAAQC,EAAW,EAAXA,YACtD,GAAsCC,EAAAA,EAAAA,WAAkB,GAAM,eAAvDC,EAAW,KAAEC,EAAc,KAE5BC,EAAgE,SACrEC,GAEAF,GAAe,GAEVD,GACJF,GAEF,EAEA,OACC,gBAAKM,UAAWC,EAAmB,UAClC,wBACER,EAAOS,KAAI,SAACC,GACZ,OACC,yBACC,gBAAKH,UAAWC,EAAoB,UACnC,gBACCG,IAAKD,EAAMA,MACXE,IAAKF,EAAMG,MACXC,OAAQT,EACRE,UAAWC,OANLE,EAAMK,GAWjB,OAIJ,ECzCA,EAA8B,+B,SCwC9B,EA/ByC,SAAH,GAAmB,IAAbC,EAAK,EAALA,MAC3C,GAAgCd,EAAAA,EAAAA,UAA4B,IAAG,eAAxDe,EAAQ,KAAEC,EAAW,MAE5BC,EAAAA,EAAAA,YAAU,WACT,IAAMC,EAAgCJ,EAAMK,MAAM,EAAG,GACrDH,EAAYE,EACb,GAAG,CAACJ,KAEJG,EAAAA,EAAAA,YAAU,WAAO,GAAG,IAEpB,IAAMlB,EAAc,WACnB,IAAMqB,EAAWN,EAAMK,MAAM,EAAGJ,EAASM,OAAS,GAClDL,EAAYI,EACb,EAEA,OACC,iBAAKf,UAAWC,EAAmB,WAClC,SAACgB,EAAA,EAAU,KACX,wBACEP,EAASR,KAAI,SAACgB,GACd,OACC,yBACC,SAAC,EAAS,CAACzB,OAAQyB,EAAKzB,OAAQC,YAAaA,KADrCwB,EAAKV,GAIhB,QAIJ,C,kECtCA,EAAgC,mCAAhC,EAAyE,yB,SCWzE,EAToB,WACnB,OACC,iBAAKR,UAAWC,EAAqB,WACpC,gBAAKD,UAAWC,KAChB,SAAC,KAAI,CAACkB,GAAG,SAAQ,SAAC,eAGrB,C,mECTA,EAAgC,kCAAhC,EAAwE,wB,kBCkBxE,EAfe,WACd,IAAMC,GAAWC,EAAAA,EAAAA,MAMjB,OACC,iBAAKrB,UAAWC,EAAsBqB,QALlB,WACpBF,EAAS,IACV,EAG6D,WAC3D,gBAAKpB,UAAWC,KAChB,SAAC,MAAW,MAGf,C,oFChBA,EAAgC,uCAAhC,EAA6E,6B,SCmC7E,EAhCe,WACd,OAAgDN,EAAAA,EAAAA,WAAkB,GAAM,eAAjE4B,EAAgB,KAAEC,EAAmB,MAE5CZ,EAAAA,EAAAA,YAAU,WACTa,OAAOC,iBAAiB,UAAU,WAC7BD,OAAOE,QAAU,IACpBH,GAAoB,GAEpBA,GAAoB,EAEtB,GACD,GAAG,IASH,OACC,8BACED,IACA,iBAAKvB,UAAWC,EAAsBqB,QAVvB,WACjBG,OAAOG,SAAS,CACfC,IAAK,EACLC,SAAU,UAEZ,EAK4D,WACxD,SAAC,MAAS,KACV,gBAAK9B,UAAWC,QAKrB,C,kGCjCA,MAAmC,oC,mCCQtB8B,EAAsC,SAAH,GAAmB,IAAbtB,EAAK,EAALA,MACrD,OACC,qBAAST,UAAWC,EAAwB,WAC3C,SAAC+B,EAAA,EAAS,CAACvB,MAAOA,KAClB,SAACwB,EAAA,EAAW,KACZ,SAACC,EAAA,EAAe,MAGnB,EAEA,G","sources":["webpack://m_portfolio/./src/components/topic_card/TopicCard.module.css?6574","components/topic_card/TopicCard.tsx","webpack://m_portfolio/./src/components/topic_list/TopicList.module.css?ece8","components/topic_list/TopicList.tsx","webpack://m_portfolio/./src/components/ui/about_button/AboutButton.module.css?dfa0","components/ui/about_button/AboutButton.tsx","webpack://m_portfolio/./src/components/ui/home_button/HomeButton.module.css?492c","components/ui/home_button/HomeButton.tsx","webpack://m_portfolio/./src/components/ui/scroll_top_button/ScrollTopButton.module.css?55fb","components/ui/scroll_top_button/ScrollTopButton.tsx","webpack://m_portfolio/./src/pages/fragments/Fragments.module.css?1279","pages/fragments/Fragments.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"cardWrapper\":\"TopicCard_cardWrapper__uJnQV\",\"imageWrapper\":\"TopicCard_imageWrapper__as6hG\",\"image\":\"TopicCard_image__SYhi7\"};","import { useState } from \"react\";\r\nimport { ICardImage } from \"../../interfaces\";\r\nimport styles from \"./TopicCard.module.css\";\r\n\r\ninterface TopicCardProps {\r\n\timages: ICardImage[];\r\n\taddNextCard: () => void;\r\n}\r\n\r\nconst TopicCard: React.FC<TopicCardProps> = ({ images, addNextCard }) => {\r\n\tconst [cardUpdated, setCardUpdated] = useState<boolean>(false);\r\n\r\n\tconst imageLoadedHandler: React.ReactEventHandler<HTMLImageElement> = (\r\n\t\tevent: React.SyntheticEvent<HTMLImageElement, Event>\r\n\t) => {\r\n\t\tsetCardUpdated(true);\r\n\r\n\t\tif (!cardUpdated) {\r\n\t\t\taddNextCard();\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className={styles.cardWrapper}>\r\n\t\t\t<ul>\r\n\t\t\t\t{images.map((image) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<li key={image.id}>\r\n\t\t\t\t\t\t\t<div className={styles.imageWrapper}>\r\n\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\tsrc={image.image}\r\n\t\t\t\t\t\t\t\t\talt={image.title}\r\n\t\t\t\t\t\t\t\t\tonLoad={imageLoadedHandler}\r\n\t\t\t\t\t\t\t\t\tclassName={styles.image}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default TopicCard;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"listWrapper\":\"TopicList_listWrapper__arsa7\"};","import { ITopicCard } from \"../../interfaces\";\r\nimport TopicCard from \"../topic_card/TopicCard\";\r\nimport styles from \"./TopicList.module.css\";\r\nimport HomeButton from \"../ui/home_button/HomeButton\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\ninterface AnalogProps {\r\n\tcards: Array<ITopicCard>;\r\n}\r\n\r\nconst TopicList: React.FC<AnalogProps> = ({ cards }) => {\r\n\tconst [allCards, setAllCards] = useState<Array<ITopicCard>>([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst initImages: Array<ITopicCard> = cards.slice(0, 1);\r\n\t\tsetAllCards(initImages);\r\n\t}, [cards]);\r\n\r\n\tuseEffect(() => {}, []);\r\n\r\n\tconst addNextCard = () => {\r\n\t\tconst newCards = cards.slice(0, allCards.length + 1);\r\n\t\tsetAllCards(newCards);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className={styles.listWrapper}>\r\n\t\t\t<HomeButton />\r\n\t\t\t<ul>\r\n\t\t\t\t{allCards.map((card) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<li key={card.id}>\r\n\t\t\t\t\t\t\t<TopicCard images={card.images} addNextCard={addNextCard} />\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default TopicList;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"buttonWrapper\":\"AboutButton_buttonWrapper__9ao+Y\",\"gap\":\"AboutButton_gap__12mxl\"};","import { Link } from \"react-router-dom\";\r\nimport styles from \"./AboutButton.module.css\";\r\n\r\nconst AboutButton = () => {\r\n\treturn (\r\n\t\t<div className={styles.buttonWrapper}>\r\n\t\t\t<div className={styles.gap}></div>\r\n\t\t\t<Link to=\"/about\">About Me</Link>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default AboutButton;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"buttonWrapper\":\"HomeButton_buttonWrapper__Sfv60\",\"gap\":\"HomeButton_gap__E8voP\"};","import { SlArrowLeft } from \"react-icons/sl\";\r\nimport styles from \"./HomeButton.module.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Button = () => {\r\n\tconst navigate = useNavigate();\r\n\r\n\tconst navigateHome = () => {\r\n\t\tnavigate(\"/\");\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className={styles.buttonWrapper} onClick={navigateHome}>\r\n\t\t\t<div className={styles.gap}></div>\r\n\t\t\t<SlArrowLeft />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Button;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"buttonWrapper\":\"ScrollTopButton_buttonWrapper__UAEow\",\"gap\":\"ScrollTopButton_gap__f78eZ\"};","import { useEffect, useState } from \"react\";\r\nimport { SlArrowUp } from \"react-icons/sl\";\r\nimport styles from \"./ScrollTopButton.module.css\";\r\n\r\nconst Button = () => {\r\n\tconst [showScrollButton, setShowScrollButton] = useState<boolean>(false);\r\n\r\n\tuseEffect(() => {\r\n\t\twindow.addEventListener(\"scroll\", () => {\r\n\t\t\tif (window.scrollY > 500) {\r\n\t\t\t\tsetShowScrollButton(true);\r\n\t\t\t} else {\r\n\t\t\t\tsetShowScrollButton(false);\r\n\t\t\t}\r\n\t\t});\r\n\t}, []);\r\n\r\n\tconst scrollTop = () => {\r\n\t\twindow.scrollTo({\r\n\t\t\ttop: 0,\r\n\t\t\tbehavior: \"smooth\",\r\n\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{showScrollButton && (\r\n\t\t\t\t<div className={styles.buttonWrapper} onClick={scrollTop}>\r\n\t\t\t\t\t<SlArrowUp />\r\n\t\t\t\t\t<div className={styles.gap}></div>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Button;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"contentContainer\":\"Fragments_contentContainer__Kfqe1\",\"image\":\"Fragments_image__hSFwx\"};","import { ITopicCard } from \"../../interfaces\";\r\nimport styles from \"./Fragments.module.css\";\r\nimport TopicList from \"../../components/topic_list/TopicList\";\r\nimport AboutButton from \"../../components/ui/about_button/AboutButton\";\r\nimport ScrollTopButton from \"../../components/ui/scroll_top_button/ScrollTopButton\";\r\n\r\ninterface FragmentsProps {\r\n\tcards: Array<ITopicCard>;\r\n}\r\nexport const Fragments: React.FC<FragmentsProps> = ({ cards }) => {\r\n\treturn (\r\n\t\t<section className={styles.contentContainer}>\r\n\t\t\t<TopicList cards={cards} />\r\n\t\t\t<AboutButton />\r\n\t\t\t<ScrollTopButton />\r\n\t\t</section>\r\n\t);\r\n};\r\n\r\nexport default Fragments;\r\n"],"names":["images","addNextCard","useState","cardUpdated","setCardUpdated","imageLoadedHandler","event","className","styles","map","image","src","alt","title","onLoad","id","cards","allCards","setAllCards","useEffect","initImages","slice","newCards","length","HomeButton","card","to","navigate","useNavigate","onClick","showScrollButton","setShowScrollButton","window","addEventListener","scrollY","scrollTo","top","behavior","Fragments","TopicList","AboutButton","ScrollTopButton"],"sourceRoot":""}